{"mappings":"gfASA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,CACTC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAKjC,SAASI,EAAcC,EAAUJ,GAC/B,IAAMK,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EAEFI,EAAQ,CAAEL,WAAUJ,UAGpBU,EAAO,CAAEN,WAAUJ,S,GAEpBA,E,IAdPJ,EAAKC,KAAKe,iBAAiB,SAmBzB,SAAsBC,GAClBA,EAAMC,iBAMN,IAJA,IAAIC,EAAQC,OAAOpB,EAAKI,MAAMiB,OAC1BhB,EAAOe,OAAOpB,EAAKK,KAAKgB,OACxBf,EAASc,OAAOpB,EAAKM,OAAOe,OAEvBC,EAAI,EAAGA,GAAKhB,EAAQgB,GAAK,EAAG,CAE/Bf,EAAce,EADKH,EAAQd,EAAOiB,GAE3BC,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUJ,EAAKoB,EAALpB,MACjBN,EAAA2B,OAAOC,QAAQ,uBAAwCC,OAAfnB,EAAS,QAAYmB,OAANvB,EAAM,M,IAE9DwB,OAAM,SAAAJ,G,IAAGhB,EAAQgB,EAARhB,SAAUJ,EAAKoB,EAALpB,MAClBN,EAAA2B,OAAOI,QAAQ,sBAAqCF,OAAfnB,EAAS,QAAYmB,OAANvB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n// підключення та імпорт бібліотек\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst refs = {\n    form: document.querySelector('.form'),\n    delay: document.querySelector('[name=\"delay\"]'),\n    step: document.querySelector('[name=\"step\"]'),\n    amount: document.querySelector('[name=\"amount\"]'),\n  }\n\n  refs.form.addEventListener('click', onFormSubmit);\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    \n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          // Fulfill\n          resolve({ position, delay });\n        } else {\n          // Reject\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n\n\n    function onFormSubmit(event) {\n        event.preventDefault();\n      \n        let delay = Number(refs.delay.value);\n        let step = Number(refs.step.value);\n        let amount = Number(refs.amount.value);\n\n        for (let i = 1; i <= amount; i += 1) {\n              let promiseDelay = delay + step * i;\n              createPromise(i, promiseDelay)\n                    .then(({ position, delay }) => {\n                      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n                    })\n                    .catch(({ position, delay }) => {\n                      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n                    });\n                }\n              }\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.be930027.js.map"}