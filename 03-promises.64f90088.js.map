{"mappings":"oeASA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAO,CACTC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAiDrB,SAASI,EAAcC,EAAUJ,GAC/B,MAAMK,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EAEFI,EAAQ,C,SAAEL,E,MAAUJ,IAGpBU,EAAO,C,SAAEN,E,MAAUJ,GAAQ,GAE5BA,EAAM,G,CA1DzBJ,EAAKC,KAAKe,iBAAiB,UAmBzB,SAAsBC,GAClBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOpB,EAAKI,MAAMiB,OAC1BhB,EAAOe,OAAOpB,EAAKK,KAAKgB,OACxBf,EAASc,OAAOpB,EAAKM,OAAOe,OAExC,GAAIF,GAAQ,GAAKd,EAAO,GAAKC,EAAS,EACpC,OAAOgB,SAASC,OAAOC,QACrB,iBACS,oCACT,aAGI,IAAK,IAAIC,EAAI,EAAGA,GAAKnB,EAAQmB,GAAK,EAAG,CAE/BlB,EAAckB,EADKN,EAAQd,EAAOoB,GAE3BC,MAAK,EAAClB,SAAEA,EAAQJ,MAAEA,MACjBN,EAAA6B,OAAOC,QAAQ,uBAAqBpB,QAAiBJ,MAAU,IAEhEyB,OAAM,EAACrB,SAAEA,EAAQJ,MAAEA,MAClBN,EAAA6B,OAAOG,QAAQ,sBAAoBtB,QAAeJ,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n// підключення та імпорт бібліотек\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst refs = {\n    form: document.querySelector('.form'),\n    delay: document.querySelector('[name=\"delay\"]'),\n    step: document.querySelector('[name=\"step\"]'),\n    amount: document.querySelector('[name=\"amount\"]'),\n  }\n\n  refs.form.addEventListener('submit', onFormSubmit);\n\n  // function createPromise(position, delay) {\n  //   const shouldResolve = Math.random() > 0.3;\n    \n  //   return new Promise((resolve, reject) => {\n  //     setTimeout(() => {\n  //       if (shouldResolve) {\n  //         // Fulfill\n  //         resolve({ position, delay });\n  //       } else {\n  //         // Reject\n  //         reject({ position, delay });\n  //       }\n  //     }, delay);\n  //   });\n  // }\n\n\n    function onFormSubmit(event) {\n        event.preventDefault();\n      \n        let delay = Number(refs.delay.value);\n        let step = Number(refs.step.value);\n        let amount = Number(refs.amount.value);\n\nif (delay <=0 || step < 0 || amount < 0) {\n  return Notiflix.Report.warning(\n    'Opsss....🧟‍♂️',\n    'The number must be greater than 0',\n    'Try again'\n  );\n}\n        for (let i = 1; i <= amount; i += 1) {\n              let promiseDelay = delay + step * i;\n              createPromise(i, promiseDelay)\n                    .then(({ position, delay }) => {\n                      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n                    })\n                    .catch(({ position, delay }) => {\n                      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n                    });\n                }\n              }\n\n\n              function createPromise(position, delay) {\n                const shouldResolve = Math.random() > 0.3;\n                \n                return new Promise((resolve, reject) => {\n                  setTimeout(() => {\n                    if (shouldResolve) {\n                      // Fulfill\n                      resolve({ position, delay });\n                    } else {\n                      // Reject\n                      reject({ position, delay });\n                    }\n                  }, delay);\n                });\n              }\n            "],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","Notiflix","Report","warning","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.64f90088.js.map"}